%Calibration test
close all;clear all; clc;
%  eval(['load scan' str_iScan '.mat;']);
seg = ["0_5" "1" "1_5" "2" "2_5" "3" "3_5" "4" "4_5" "5" "5_5" "6" "6_5" "7" "7_5" "8" "8_5"];
seg1 = [0.5 1 1.5 2 2.5 3 3.5 4 4.5 5 5.5 6 6.5 7 7.5 8 8.5];
for i=1:size(seg,2)
%     a = eval(['teste_calibragem_' seg(i) 'm2.fig']);
a = 'teste_calibragem_' +seg(i)+ 'm2.fig';
b=seg1(1,i);
% end
% a='teste_calibragem_0_5m2.fig';
fig = open(a);
% fig = eval(['open teste_calibragem_0_5m2.fig']);
axObjs = fig.Children;
dataObjs = axObjs.Children;
x = dataObjs(1).XData;
y = dataObjs(1).YData;
z = dataObjs(1).ZData;
points = [x;y];
points_ok = [];
%Determinar limites no eixo x e y que selecione apenas a linha analisada
points_ok = x>=b & x<(b+2) & y<0.2 & y>-0.5;
aux=1;
points_accepted=[];
for j = 1:size(points,2)
    if points_ok(1,j)==1
        points_accepted(:,aux)=points(:,j);
        aux=aux+1;
    end
end
new_points = points_accepted';
%Ax+By = C
[A, B, C] = fit_line_least_squares(new_points);
%em y=0;
y1=0;
x1 = (-B*y1+C)/A;
distance(1,i)=x1;
end

figure
plot(seg1,distance,'-o','LineWidth',2);
% axis equal; 
axis([0 9 0 10]);
grid on;
xlabel('Distâncias reais (m)');ylabel('Distâncias medidas (m)');

function [A, B, C] = fit_line_least_square(points)
    % Na página 94 do livro, onde ele pega os pontos para a origem subtraindo pela média:
    centroid = [mean(points(:, 1)), mean(points(:, 2))];
    points_aux = [points(:, 1) - centroid(1), points(:, 2) - centroid(2)];
    
    % Eq. 14: Obtém a'
    data_aux_2 = points_aux.^2;
    sum_data_aux = sum(data_aux_2); % sum columns
    a = sum_data_aux(1) - sum_data_aux(2);
    
    % Eq. 14: Obtem b'
    b = 0;
    for i=1:size(points_aux, 1)
        b = b + points_aux(i, 1) * points_aux(i, 2);
    end

    % Eq. 23 : Obtem os coeficientes da equacao da reta
    if (a == 0 && b == 0)
        A = []; B = []; C = [];
    else
        A = 2 * b;
        B = -(a + sqrt(a^2 + 4*(b^2)));
        C = A*centroid(1) + B*centroid(2);
    end
end